declare function _Buffer(value: any): boolean;
declare function Hex(value: any): boolean;
declare function Range(a: number, b: number, f: (v: any) => boolean): (value: any, strict: boolean) => boolean;
declare function Finite(value: any): boolean;
declare function Int8(value: any): boolean;
declare function Int16(value: any): boolean;
declare function Int32(value: any): boolean;
declare function Int53(value: any): boolean;
declare function UInt8(value: any): boolean;
declare function UInt16(value: any): boolean;
declare function UInt32(value: any): boolean;
declare function UInt53(value: any): boolean;
declare const types: {
    ArrayN: (length: number) => (value: any) => boolean;
    Buffer: typeof _Buffer;
    BufferN: (length: number) => (value: any) => boolean;
    Finite: typeof Finite;
    Hex: typeof Hex;
    HexN: (length: number) => (value: any) => boolean;
    Int8: typeof Int8;
    Int16: typeof Int16;
    Int32: typeof Int32;
    Int53: typeof Int53;
    Range: typeof Range;
    StringN: (length: number) => (value: any) => boolean;
    UInt8: typeof UInt8;
    UInt16: typeof UInt16;
    UInt32: typeof UInt32;
    UInt53: typeof UInt53;
};
export { types as extra };
